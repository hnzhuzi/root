kind: Deployment
apiVersion: apps/v1
metadata:
  name: traefik-ingress-controller
  namespace: ns-v7g7
  labels:
    k8s-app: traefik-ingress-lb
spec:
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  replicas: 2
  selector:
    matchLabels:
      k8s-app: traefik-ingress-lb
  template:
    metadata:
      labels:
        k8s-app: traefik-ingress-lb
        name: traefik-ingress-lb
    spec:
      serviceAccountName: sa-v7g7
      imagePullSecrets:
      - name: regsecret
      terminationGracePeriodSeconds: 60
      containers:
      - image: 10.190.2.171/base/traefik:1.7.9
        name: traefik-ingress-lb
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 80
        - name: https
          containerPort: 443
        - name: admin
          containerPort: 18080
        securityContext:
          privileged: true
        args:
        - --web
        - --kubernetes
        - --kubernetes.namespaces=ns-v7g7
        - --web.address=:18080
        - --web.metrics.prometheus
        - --maxIdleConnsPerHost=-1
        volumeMounts:
          - mountPath: /etc/traefik/ssl
            name: jdy-tls-secret
      volumes:
      - name: jdy-tls-secret
        secret:
          secretName: jdy-tls-secret 
---
kind: Service
apiVersion: v1
metadata:
  name: traefik-ingress-service
  namespace: ns-v7g7
  labels:
    k8s-app: traefik-ingress-lb
  annotations:
    service.beta.kubernetes.io/alicloud-loadbalancer-id: lb-bp1020zo021zqtcxvg02y
    service.beta.kubernetes.io/alicloud-loadbalancer-force-override-listeners: 'true'
spec:
  selector:
    k8s-app: traefik-ingress-lb
  ports:
    - protocol: TCP
      port: 80
      name: web
    - protocol: TCP
      port: 443
      name: web-https
    - protocol: TCP
      port: 18080
      name: admin
  type: LoadBalancer
