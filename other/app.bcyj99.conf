  #nginx实现动态负载均衡
  upstream bcyjapp {
	#	server 172.16.3.131:8084 weight=1 max_fails=2 fail_timeout=30s;
		server 172.16.3.132:8084 weight=1 max_fails=2 fail_timeout=30s;
   }


   server {
       listen 80;
       server_name  app.bcyj99.com;
       rewrite ^(.*) https://$server_name$1 permanent;
	}
   server {
       listen 443;
       server_name  app.bcyj99.com;
       ssl on;
       ssl_certificate /app/nginx/conf/ssl/app.bcyj99.pem;
       ssl_certificate_key /app/nginx/conf/ssl/app.bcyj99.key;
       ssl_session_cache shared:SSL:10m;
       ssl_session_timeout 10m;
       ssl_ciphers ALL:!aNULL:!ADH:!eNULL:!LOW:!EXP:RC4+RSA:+HIGH:+MEDIUM;
       ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
       ssl_prefer_server_ciphers on;
       root /data/www/appbcyj99com;
       index  index.jsp index.html index.htm index.php;
       charset utf-8;

      #日志
       access_log  /app/log/nginx/app.bcyj99.com/access.log main;
       error_log  /app/log/nginx/app.bcyj99.com/error.log;

       #动态资源,动态请求转发到tomcat服务器，匹配方式可自定义
        #location ~ \.(jsp|jspx|do|action)(\/.*)?$ {

	location /bcyj/ {
             proxy_set_header real_ip $remote_addr;
             proxy_set_header x-forwarded-for $remote_addr;
	     proxy_pass http://bcyjapp/;
        }



	#图片静态资源
    #    location ~ .*.(png|jpeg|jpg|gif)$ {
    #      root /data/www/appbcyj99com/;
    #    }


       #静态资源
        location ~ .*\.(png|jpeg|js|jpg|gif|css|bmp|swf|ioc|rar|zip|txt|flv|mid|doc|ppt|pdf|xls|mp3|wma|exe)$ {
        proxy_cache cache_one;
        proxy_cache_valid 200 304 302 10m;
        proxy_cache_valid any 1m;
        proxy_cache_key '$host:$server_port$request_uri';
        add_header X-Cache '$upstream_cache_status from $host';
        #静态资源存储到OSS,oss通过反向代理配置自己域名的http
        proxy_pass http://appbcyj99oss01.vpc100-oss-cn-shenzhen.aliyuncs.com;
        proxy_set_header   Referer http://appbcyj99oss01.vpc100-oss-cn-shenzhen.aliyuncs.com;
        access_log  off;
        #缓存30分钟
        expires 30m;
         }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }

